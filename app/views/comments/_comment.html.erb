<% if comment %>
    <div class="comment-<%= comment.id %>">

      <br/>
      <% if comment.user== current_user %>
        <div class="del_comment"> 
          <%= link_to raw("<i class=\"icon-remove icon-small\"></i>"),  comment, method: :delete, data: { confirm: "You sure?" }, remote: true, title: comment.body %>
        </div>
      <% else %>
        <div class="flag">
          <%= render 'flags/flag_button', flaggable: comment, type: "Comment" %>
        </div>
      <% end %>
  <% cache comment do %>
    <!--
       -do caching with comment content and number of stats & number of downvotes or replies as it saves more time calculating the count & no need of any counter cache :) This works with model of vote, downvote set as touch: true!
       -->
     <div class="comment_body">
       <%= render 'comments/comment_content', comment: comment %>
     </div>
      <div class="votes-up"> <i class="icon-caret-up icon-small"></i></div>
      <div class="votes">
        <%= comment.votes.count %>
      </div>
      <% if comment.commentable_type == 'Link' %>

        <div class="votes-up"><i class="icon-comments-alt icon-small"></i></div>
        <div class="show_comment">
          <%= link_to pluralize(comment.comments.count, "reply"), comment_path(comment), class: 'hook-comment-comments', remote: true %>
        </div>
      <% else %>
        <div class="votes-up"><i class="icon-caret-down icon-small"></i></div>
        <div class="downvotes">
          <%= comment.comment_downvotes.count %>
        </div>
      <% end %>
    <% end %>
    <div class="comment-downvote">
      <%= render 'comment_downvotes/downvote_button', comment: comment %>
    </div>
    <div class="comment-vote">
      <%= render 'votes/vote_button', votable: comment, type: "Comment" %>
    </div>
    <br/>
    <div id="comment-comments">
    </div>
    <div class="comments-form">
    </div>
    <div class="underline"></div>
  </div>
<% end %>
